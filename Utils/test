import os

from smartystreets_python_sdk import StaticCredentials, exceptions, ClientBuilder
from smartystreets_python_sdk.us_street import Lookup as StreetLookup


def run():
   auth_id = "f035080f-c8fb-2860-a856-a2d7cf3537fb"
   auth_token = "gH1PRVsGnUuY3VEzLd0y"

   credentials = StaticCredentials(auth_id, auth_token)
   client = ClientBuilder(credentials).build_us_street_api_client()
   lookup = StreetLookup()

   lookup.street = "500 W 120th"
   # lookup.street2 = "closet under the stairs"
   # lookup.secondary = "APT 2"
   # lookup.urbanization = ""  # Only applies to Puerto Rico addresses
   lookup.city = "New York"
   lookup.state = "NY"
   # lookup.zipcode = ""
   # lookup.candidates = 3

   try:
      client.send_lookup(lookup)
   except exceptions.SmartyException as err:
      print(err)
      return

   result = lookup.result

   if not result:
      print("No candidates. This means the address is not valid.")
      return
   else:
      # Valid address. result[i] is the i-th matched candidate
      print("Primary number:  {}".format(result[0].components.primary_number))
      print("Predirection:	   {}".format(result[0].components.street_predirection))
      print("Street name:	   {}".format(result[0].components.street_name))
      print("Street suffix:   {}".format(result[0].components.street_suffix))
      print("Postdirection:   {}".format(result[0].components.street_postdirection))
      print("City:			   {}".format(result[0].components.city_name))
      print("State:		      {}".format(result[0].components.state_abbreviation))
      print("ZIP Code:		   {}".format(result[0].components.zipcode))
      print("County:		      {}".format(result[0].metadata.county_name))
      print("Latitude:		   {}".format(result[0].metadata.latitude))
      print("Longitude:	      {}".format(result[0].metadata.longitude))


if __name__ == "__main__":
   run()